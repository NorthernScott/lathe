"""
This type stub file was generated by pyright.
"""

from typing import TYPE_CHECKING
from collections.abc import Iterator

"""
This type stub file was generated by pyright.
"""
if TYPE_CHECKING:
    ...
BUILDING_GALLERY_ERROR_MSG = ...
def html_rst(figure_list, sources_dir, srcsetpaths=...):
    """Generate reST for viewer with exported scene."""
    ...

def generate_images(image_path_iterator: Iterator[str], dynamic: bool = ...) -> list[str]:
    """Generate images from the current plotters.

    The file names are taken from the ``image_path_iterator`` iterator.

    A gif will be created if a plotter has a ``_gif_filename`` attribute.
    Otherwise, depending on the value of ``dynamic``, either a ``.png`` static image
    or a ``.vtksz`` file will be created.

    Parameters
    ----------
    image_path_iterator : Iterator[str]
        An iterator that yields the path to the next image to be saved.

    dynamic : bool, default: False
        Whether to save a static ``.png`` image or a ``.vtksz`` (interactive)
        file.

    Returns
    -------
    list[str]
        A list of the names of the images that were created.
    """
    ...

class Scraper:
    """
    Save ``pyvista.Plotter`` objects.

    Used by sphinx-gallery to generate the plots from the code in the examples.

    Pass an instance of this class to ``sphinx_gallery_conf`` in your
    ``conf.py`` as the ``"image_scrapers"`` argument.

    Be sure to set ``pyvista.BUILDING_GALLERY = True`` in your ``conf.py``.

    """
    def __repr__(self):
        """Return a stable representation of the class instance."""
        ...
    
    def __call__(self, block, block_vars, gallery_conf):
        """Save the figures generated after running example code.

        Called by sphinx-gallery.

        """
        ...
    


class DynamicScraper:
    """
    Save ``pyvista.Plotter`` objects dynamically.

    Used by sphinx-gallery to generate the plots from the code in the examples.

    Pass an instance of this class to ``sphinx_gallery_conf`` in your
    ``conf.py`` as the ``"image_scrapers"`` argument.

    Be sure to set ``pyvista.BUILDING_GALLERY = True`` in your ``conf.py``.

    If the boolean variable ``PYVISTA_GALLERY_FORCE_STATIC_IN_DOCUMENT = True/False`` is set as a global
    variable in the document then its value will be used as default for the
    force_static argument of the pyvista-plot command. see also the notes at :func:plot_directive

    To alter the global value behavior just for some plots you may set the
    boolean variable ``PYVISTA_GALLERY_FORCE_STATIC = True``/
    ``PYVISTA_GALLERY_FORCE_STATIC = False`` just before the appropriate ``plot`` command.

    The default behavior of this scraper is to create interactive plots.

    """
    def __repr__(self):
        """Return a stable representation of the class instance."""
        ...
    
    def __call__(self, block, block_vars, gallery_conf):
        """Save the figures generated after running example code.

        Called by sphinx-gallery.

        """
        ...
    


