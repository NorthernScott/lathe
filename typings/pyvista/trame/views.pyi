"""
This type stub file was generated by pyright.
"""

from trame.widgets.vtk import VtkLocalView, VtkRemoteLocalView, VtkRemoteView

"""Trame view interface for PyVista."""
CLOSED_PLOTTER_ERROR = ...
def get_server(*args, **kwargs): # -> Server | None:
    """Override trame's get_server.

    Parameters
    ----------
    *args :
        Any extra args are passed as option to the server instance.

    **kwargs :
        Any extra keyword args are passed as option to the server instance.

    Returns
    -------
    trame_server.core.Server
        Trame server.
    """
    ...

class _BasePyVistaView:
    def __init__(self, plotter) -> None:
        """Initialize the base PyVista view."""
        ...
    
    def pyvista_initialize(self): # -> None:
        ...
    
    def update_camera(self): # -> None:
        """Update camera or push the image."""
        ...
    
    def export_html(self): # -> bytes:
        """Export scene to HTML as StringIO buffer."""
        ...
    


class PyVistaRemoteView(VtkRemoteView, _BasePyVistaView):
    """PyVista wrapping of trame ``VtkRemoteView`` for server rendering.

    This will connect to a PyVista plotter and stream the server-side
    renderings.

    Parameters
    ----------
    plotter : pyvista.Plotter
        The PyVista Plotter to display in the output view.

    interactive_ratio : int, optional
        Image size scale factor while interacting. Increasing this
        value will give higher resulotuion images during interaction
        events at the cost of performance. Use lower values (e.g.,
        ``0.5``) to increase performance while interacting.
        Defaults to 1.

    still_ratio : int, optional
        Image size scale factor while not interacting (still).
        Increasing this value will give higher resulotuion images
        when not interacting with the scene. Defaults to 1.

    namespace : str, optional
        The namespace for this view component. A default value is
        chosen based on the ``_id_name`` of the plotter.

    **kwargs : dict, optional
        Any additional keyword arguments to pass to
        ``trame.widgets.vtk.VtkRemoteView``.

    Notes
    -----
    For optimal rendering results, you may want to have the same
    value for ``interactive_ratio`` and ``still_ratio`` so that
    the entire rendering is not re-scaled between interaction events.

    """
    def __init__(self, plotter, interactive_ratio=..., still_ratio=..., namespace=..., **kwargs) -> None:
        """Create a trame remote view from a PyVista Plotter."""
        ...
    
    def push_camera(self, *args, **kwargs): # -> None:
        """No-op implementation to match local viewers."""
        ...
    
    def update_image(self, *args, **kwargs): # -> None:
        """Wrap update call."""
        ...
    


class PyVistaLocalView(VtkLocalView, _BasePyVistaView):
    """PyVista wrapping of trame VtkLocalView for in-browser rendering.

    This will connect to and synchronize with a PyVista plotter to
    perform client-side rendering with VTK.js in the browser.

    Parameters
    ----------
    plotter : pyvista.Plotter
        The PyVista Plotter to represent in the output view.

    namespace : str, optional
        The namespace for this view component. A default value is
        chosen based on the ``_id_name`` of the plotter.

    **kwargs : dict, optional
        Any additional keyword arguments to pass to
        ``trame.widgets.vtk.VtkLocalView``.

    """
    def __init__(self, plotter, namespace=..., **kwargs) -> None:
        """Create a trame local view from a PyVista Plotter."""
        ...
    
    def update_image(self, *args, **kwargs): # -> None:
        """No-op implementation to match remote viewers."""
        ...
    


class PyVistaRemoteLocalView(VtkRemoteLocalView, _BasePyVistaView):
    """PyVista wrapping of trame ``VtkRemoteLocalView``.

    Dynamically switch between client and server rendering.

    Parameters
    ----------
    plotter : pyvista.Plotter
        The PyVista Plotter to display in the output view.

    interactive_ratio : int, optional
        Image size scale factor while interacting. Increasing this
        value will give higher resulotuion images during interaction
        events at the cost of performance. Use lower values (e.g.,
        ``0.5``) to increase performance while interacting.
        Defaults to 1. This is only valid in the ``'remote'`` mode.

    still_ratio : int, optional
        Image size scale factor while not interacting (still).
        Increasing this value will give higher resulotuion images
        when not interacting with the scene. Defaults to 1.
        This is only valid in the ``'remote'`` mode.

    namespace : str, optional
        The namespace for this view component. A default value is
        chosen based on the ``_id_name`` of the plotter.

    **kwargs : dict, optional
        Any additional keyword arguments to pass to
        ``trame.widgets.vtk.VtkRemoteLocalView``.

    """
    def __init__(self, plotter, interactive_ratio=..., still_ratio=..., namespace=..., **kwargs) -> None:
        """Create a trame remote/local view from a PyVista Plotter."""
        ...
    


