"""
This type stub file was generated by pyright.
"""

class spmatrix:
    """This class provides a base class for all sparse matrix classes.

    It cannot be instantiated.  Most of the work is provided by subclasses.
    """
    _allow_nd = ...
    def __mul__(self, other):
        ...
    
    def __rmul__(self, other):
        ...
    
    def __pow__(self, power): # -> coo_array | coo_matrix | dia_array | Any | dia_matrix | _NotImplementedType:
        ...
    
    def set_shape(self, shape): # -> None:
        """Set the shape of the matrix in-place"""
        ...
    
    def get_shape(self):
        """Get the shape of the matrix"""
        ...
    
    shape = ...
    def asfptype(self):
        """Upcast matrix to a floating point format (if necessary)"""
        ...
    
    def getmaxprint(self):
        """Maximum number of elements to display when printed."""
        ...
    
    def getformat(self):
        """Matrix storage format"""
        ...
    
    def getnnz(self, axis=...):
        """Number of stored values, including explicit zeros.

        Parameters
        ----------
        axis : None, 0, or 1
            Select between the number of values across the whole array, in
            each column, or in each row.
        """
        ...
    
    def getH(self):
        """Return the Hermitian transpose of this matrix.

        See Also
        --------
        numpy.matrix.getH : NumPy's implementation of `getH` for matrices
        """
        ...
    
    def getcol(self, j):
        """Returns a copy of column j of the matrix, as an (m x 1) sparse
        matrix (column vector).
        """
        ...
    
    def getrow(self, i):
        """Returns a copy of row i of the matrix, as a (1 x n) sparse
        matrix (row vector).
        """
        ...
    
    def todense(self, order=..., out=...):
        """
        Return a dense representation of this sparse matrix.

        Parameters
        ----------
        order : {'C', 'F'}, optional
            Whether to store multi-dimensional data in C (row-major)
            or Fortran (column-major) order in memory. The default
            is 'None', which provides no ordering guarantees.
            Cannot be specified in conjunction with the `out`
            argument.

        out : ndarray, 2-D, optional
            If specified, uses this array (or `numpy.matrix`) as the
            output buffer instead of allocating a new array to
            return. The provided array must have the same shape and
            dtype as the sparse matrix on which you are calling the
            method.

        Returns
        -------
        arr : numpy.matrix, 2-D
            A NumPy matrix object with the same shape and containing
            the same data represented by the sparse matrix, with the
            requested memory order. If `out` was passed and was an
            array (rather than a `numpy.matrix`), it will be filled
            with the appropriate values and returned wrapped in a
            `numpy.matrix` object that shares the same memory.
        """
        ...
    


