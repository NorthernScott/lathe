"""
This type stub file was generated by pyright.
"""

import cupy as cp
from ..common import _aliases
from typing import Optional, TYPE_CHECKING, Union
from ._typing import Device, Dtype, NestedSequence, SupportsBufferProtocol, ndarray

if TYPE_CHECKING:
    ...
bool = ...
acos = ...
acosh = ...
asin = ...
asinh = ...
atan = ...
atan2 = ...
atanh = ...
bitwise_left_shift = ...
bitwise_invert = ...
bitwise_right_shift = ...
concat = ...
pow = ...
arange = ...
empty = ...
empty_like = ...
eye = ...
full = ...
full_like = ...
linspace = ...
ones = ...
ones_like = ...
zeros = ...
zeros_like = ...
UniqueAllResult = ...
UniqueCountsResult = ...
UniqueInverseResult = ...
unique_all = ...
unique_counts = ...
unique_inverse = ...
unique_values = ...
astype = ...
std = ...
var = ...
cumulative_sum = ...
clip = ...
permute_dims = ...
reshape = ...
argsort = ...
sort = ...
nonzero = ...
ceil = ...
floor = ...
trunc = ...
matmul = ...
matrix_transpose = ...
tensordot = ...
sign = ...
_copy_default = ...
def asarray(obj: Union[ndarray, bool, int, float, NestedSequence[bool | int | float], SupportsBufferProtocol,], /, *, dtype: Optional[Dtype] = ..., device: Optional[Device] = ..., copy: Optional[bool] = ..., **kwargs) -> ndarray:
    """
    Array API compatibility wrapper for asarray().

    See the corresponding documentation in the array library and/or the array API
    specification for more details.
    """
    ...

if hasattr(cp, 'vecdot'):
    vecdot = ...
else:
    vecdot = ...
if hasattr(cp, 'isdtype'):
    isdtype = ...
else:
    isdtype = ...
if hasattr(cp, 'unstack'):
    unstack = ...
else:
    unstack = ...
__all__ = _aliases.__all__ + ['__array_namespace_info__', 'asarray', 'bool', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atan2', 'atanh', 'bitwise_left_shift', 'bitwise_invert', 'bitwise_right_shift', 'concat', 'pow', 'sign']
_all_ignore = ...
