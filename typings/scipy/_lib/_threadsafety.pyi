"""
This type stub file was generated by pyright.
"""

__all__ = ['ReentrancyError', 'ReentrancyLock', 'non_reentrant']
class ReentrancyError(RuntimeError):
    ...


class ReentrancyLock:
    """
    Threading lock that raises an exception for reentrant calls.

    Calls from different threads are serialized, and nested calls from the
    same thread result to an error.

    The object can be used as a context manager or to decorate functions
    via the decorate() method.

    """
    def __init__(self, err_msg) -> None:
        ...
    
    def __enter__(self): # -> None:
        ...
    
    def __exit__(self, type, value, traceback): # -> None:
        ...
    
    def decorate(self, func):
        ...
    


def non_reentrant(err_msg=...): # -> Callable[..., Any]:
    """
    Decorate a function with a threading lock and prevent reentrant calls.
    """
    ...

